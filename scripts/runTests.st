| env cout repoPath unitTests path stream res |
"We load the application software analyzer"

env := Smalltalk os environment.

cout := Stdio stdout.
repoPath := 'gitlocal://', (env at: 'GITHUB_WORKSPACE').
cout << '>>> Clonning from: '; << repoPath; crlf.

cout << 'Loading: HierarchicalVisualizations' crlf.

[
Metacello new
	 baseline: 'NumericScales';
	 repository: 'github://pharo-graphics/NumericScales/src';
	 load.

Metacello new
    baseline: 'Roassal';
    repository: 'github://pharo-graphics/Roassal';
    load.

Metacello new
    baseline: 'HierarchicalVisualizations';
    repository: repoPath;
    load
] on: MCMergeOrLoadWarning do: [ :warning | warning load ].

"We identify the unit tests contained in the loaded application"
unitTests := (TestCase withAllSubclasses 
	select: [ :cls | cls package name beginsWith: 'Hierarchical' ])
	sorted: [ :c1 :c2 | c1 name < c2 name ].

"We create a file that will contain the result of the test execution"
path := '/tmp/result.txt'.
path asFileReference exists ifTrue: [ path asFileReference delete ].
stream := path asFileReference writeStream.

"We run the unit tests"
unitTests do: [ :unitTestClass |
	res := unitTestClass buildSuite run.
	(res hasFailures or: [ res hasErrors ]) ifTrue: [ stream nextPutAll: 'ERROR: ' ].
	stream nextPutAll: unitTestClass name, ' ', res asString.
	stream crlf
].

"We close the stream and quit Pharo"
stream close.
SmalltalkImage current quitPrimitive
